{
	// Place your snippets for rpgle here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Declare Procedure": {
		"prefix": "declare procedure",
		"body": [
			"dcl-proc ${1:ProcName};",
			"   dcl-pi *n int(5);",
			"     ${2:parm1}   char(5) const;",
			"     ${3:parm2}   int(5); ",
			"   end-pi;",
		    "end-proc;",
		],
 		"description": "Declare Procedure"
	},

	"Declare Procedure Interface": {
		"prefix": "declare pi",
		"body": [
			"dcl-pi *N;",
			"   ${1:parm1} char(10);",
			"   ${2:parm2} packed(9:2);",
			"end-pi;"		
		],
		"description": "Declare Procedure Interface"
	},

	"Declare File": {
		"prefix": "declare file externally-described",
		"body": [
		    "dcl-f ${1:filename} keyed;",
		],
		"description": "Declare File"
	},
	
	"Declare DS Key": {
		"prefix": "declare ds key",
		"body": [
		    "dcl-ds ${1:keyDsName} likerec(${2:recname}:*key);",
		],
		"description": "Declare DS Key"
	},
	
	"Declare DS like record": {
		"prefix": "declare ds likerec",
		"body": [
		    "dcl-ds ${1:dsName} likerec(${2:recname}:*all);",
		],
		"description": "Declare DS like record"
	},
	
	"Declare Display File": {
		"prefix": "declare dspf subfile",
		"body": [
			"dcl-f ${1:dspfname} workstn indds(${2:indic}) sfile(${3:sfilerec}:${4:recnum});",
			"dcl-s recnum zoned(4:0);",	
		],
		"description": "Declare Display File"
	},
	
	"Declare Printer File": {
		"prefix": "declare prtf",
		"body": [
			"dcl-f ${1:prtfname} printer indds(${2:indic}) oflind(${3:*in90});",
		],
		"description": "Declare Printer File"
	},
	
	"Declare Indicators": {
		"prefix": "declare ds indicators",
		"body": [
			"dcl-ds ${1:indic} qualified ;",
            "   exit      ind pos(03);",
            "   refresh   ind pos(05);",
            "   addrec    ind pos(06);",
            "   cancel    ind pos(12);",
            "   delrec    ind pos(23);",
            "   more      ind pos(24);",
            "   sflMore   ind pos(70);",
            "   sflDsp    ind pos(80);",
            "   sflClr    ind pos(81);",
            "   pageDown  ind pos(90);",
            "   pageUp    ind pos(91);",
            "end-ds;",
		],
		"description": "Declare Indicators"
	},

	"Declare SQL smallint": {
		"prefix": "declare SQL smallint",
		"body": [
			"dcl-s ${1:varname}   int(5);",
		],
		"description": "Declare SQL smallint"
	},

	"Declare SQL integer": {
		"prefix": "declare SQL integer",
		"body": [
			"dcl-s ${1:varname}   int(10);",
		],
		"description": "Declare SQL integer"
	},

	"Declare SQL bigint": {
		"prefix": "declare SQL bigint",
		"body": [
			"dcl-s ${1:varname}   int(20);",
		],
		"description": "Declare SQL bigint"
	},

	"Declare SQL decimal": {
		"prefix": "declare SQL decimal",
		"body": [
			"dcl-s ${1:varname}   packed(9:2);",
		],
		"description": "Declare SQL decimal"
	},

	"Declare SQL numeric": {
		"prefix": "declare SQL numeric",
		"body": [
			"dcl-s ${1:varname}   zoned(9:2);",
		],
		"description": "Declare SQL numeric"
	},

	"Declare SQL float single precision": {
		"prefix": "declare SQL float single precision",
		"body": [
			"dcl-s ${1:varname}   float(4);",
		],
		"description": "Declare SQL float single precision"
	},

	"Declare SQL float double precision": {
		"prefix": "declare SQL float double precision",
		"body": [
			"dcl-s ${1:varname}   float(8);",
		],
		"description": "Declare SQL float double precision"
	},

	"Declare SQL char": {
		"prefix": "declare SQL char",
		"body": [
			"dcl-s ${1:varname}   char(${2:len});",
		],
		"description": "Declare SQL char"
	},

	"Declare SQL char using ds": {
		"prefix": "declare SQL char using ds",
		"body": [
			"dcl-ds ${1:dsname}   len(${2:n}) end-ds;",
		],
		"description": "Declare SQL char using ds"
	},

	"Declare SQL varchar": {
		"prefix": "declare SQL varchar",
		"body": [
			"dcl-s ${1:varname}   varchar(${2:len});",
		],
		"description": "Declare SQL varchar"
	},

	"Declare SQL date": {
		"prefix": "declare SQL date",
		"body": [
			"dcl-s ${1:varname}   date;",
		],
		"description": "Declare SQL date"
	},

	"Declare SQL time": {
		"prefix": "declare SQL time",
		"body": [
			"dcl-s ${1:varname}   time;",
		],
		"description": "Declare SQL time"
	},

	"Declare SQL timestamp": {
		"prefix": "declare SQL timestamp",
		"body": [
			"dcl-s ${1:varname}   timestamp(32);",
		],
		"description": "Declare SQL timestamp"
	},

	"Declare SQL binary": {
		"prefix": "declare SQL binary",
		"body": [
			"dcl-s ${1:varname}   sqltype(binary:${2:len});",
		],
		"description": "Declare SQL binary"
	},

	"Declare SQL varbinary": {
		"prefix": "declare SQL varbinary",
		"body": [
			"dcl-s ${1:varname}   sqltype(varbinary:${2:len});",
		],
		"description": "Declare SQL varbinary"
	},

	"Declare SQL clob": {
		"prefix": "declare SQL clob",
		"body": [
			"dcl-s ${1:varname}   sqltype(clob:${2:len});",
		],
		"description": "Declare SQL clob"
	},

	"Declare SQL dbclob": {
		"prefix": "declare SQL dbclob",
		"body": [
			"dcl-s ${1:varname}   sqltype(dbclob:${2:len});",
		],
		"description": "Declare SQL dbclob"
	},

	"Declare SQL blob": {
		"prefix": "declare SQL blob",
		"body": [
			"dcl-s ${1:varname}   sqltype(blob:${2:len});",
		],
		"description": "Declare SQL blob"
	},

	"Declare SQL clob locator": {
		"prefix": "declare SQL clob locator",
		"body": [
			"dcl-s ${1:varname}   sqltype(clob_locator);",
		],
		"description": "Declare SQL clob locator"
	},

	"Declare SQL dbclob locator": {
		"prefix": "declare SQL dbclob locator",
		"body": [
			"dcl-s ${1:varname}   sqltype(dbclob_locator);",
		],
		"description": "Declare SQL dbclob locator"
	},

	"Declare SQL blob locator": {
		"prefix": "declare SQL blob locator",
		"body": [
			"dcl-s ${1:varname}   sqltype(blob_locator);",
		],
		"description": "Declare SQL blob locator"
	},

	"Declare SQL clob file": {
		"prefix": "declare SQL clob file",
		"body": [
			"dcl-s ${1:varname}   sqltype(clob_file);",
		],
		"description": "Declare SQL clob file"
	},

	"Declare SQL dbclob file": {
		"prefix": "declare SQL dbclob file",
		"body": [
			"dcl-s ${1:varname}   sqltype(dbclob_file);",
		],
		"description": "Declare SQL dbclob file"
	},

	"Declare SQL blob file": {
		"prefix": "declare SQL blob file",
		"body": [
			"dcl-s ${1:varname}   sqltype(blob_file);",
		],
		"description": "Declare SQL blob file"
	},

	"For loop ascending": {
		"prefix": "for loop ascending",
		"body": [
			"for i = 1 to 10;",
            "endfor;",
		],
		"description": "For loop ascending"
	},

	"For loop ascending with increment": {
		"prefix": "for loop ascending with increment",
		"body": [
			"for i = 2 by 2 to 10;",
            "endfor;",
		],
		"description": "For loop ascending with increment"
	},

	"For loop descending": {
		"prefix": "for loop descending",
		"body": [
			"for i = 10 downto 1;",
            "endfor;",
		],
		"description": "For loop descending"
	},

	"For loop descending with increment": {
		"prefix": "for loop descending with increment",
		"body": [
			"for i = 10 by 2 downto 2;",
            "endfor;",
		],
		"description": "For loop descending with increment"
	},

	"Chain file": {
		"prefix": "chain file",
		"body": [
			"chain (${1:keyfld1}:${2:keyfld2}:${3:keyfld3}) ${4:filename};",
		],
		"description": "Chain file"
	},

	"Chain file kds": {
		"prefix": "chain file kds",
		"body": [
			"chain %kds(${1:keyDs}) ${2:filename};",
		],
		"description": "Chain file kds"
	},

	"Chain file kds partial key": {
		"prefix": "chain file kds partial key",
		"body": [
			"chain %kds(${1:keyDs}:${2:numkeys}) ${3:filename};",
		],
		"description": "Chain file kds partial key"
	},

	"Chain subfile": {
		"prefix": "chain subfile",
		"body": [
			"chain ${1:sflrecnum} ${2:sflrecname};",
		],
		"description": "Chain subfile"
	},

	"Setll file kds": {
		"prefix": "setll file kds",
		"body": [
			"setll %kds(${1:keyDs}) ${2:recname};",
		],
		"description": "Setll file kds"
	},

	"Setll file kds partial key": {
		"prefix": "setll file kds partial key",
		"body": [
			"setll %kds(${1:keyDs}:${2:numkeys}) ${3:recname};",
		],
		"description": "Setll file kds partial key"
	},
	
	"Write record to file": {
		"prefix": "write record to file",
		"body": [
			"write ${1:recname};",
		],
		"description": "Write record to file"
	},
	
	"Execute format": {
		"prefix": "execute format",
		"body": [
			"exfmt ${1:recname};",
		],
		"description": "Execute format"
	},
	
	"Update record": {
		"prefix": "Update record",
		"body": [
			"update ${1:recname};",
		],
		"description": "Update record"
	},

	"Delete record": {
		"prefix": "Delete record",
		"body": [
			"delete ${1:recname};",
		],
		"description": "Delete record"
	},
	
}