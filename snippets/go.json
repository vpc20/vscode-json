{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"array declaration": {
		"prefix": "array",
		"body": [
			"var ${1:arrname} [${2:size}]${3:type}"
		],
		"description": "array declaration"
	},
	"array declaration w/ initial values": {
		"prefix": "arrayinit",
		"body": [
			"${1:arrname} := [${2:size}]${3:type}{${4:val1}, ${5:val2}, ${6:val3}}"
		],
		"description": "array declaration w/ initial values"
	},
	"map declaration": {
		"prefix": "map",
		"body": [
			"var ${1:mapname} map[${2:keytype}]${3:valtype}"
		],
		"description": "map declaration"
	},
	"map declaration w/ initial values": {
		"prefix": "mapinit",
		"body": [
			"var ${1:mapname} = map[${2:keytype}]${3:valtype}{${4:key1}: ${5:val1}, ${6:key2}: ${7:val2}, ${8:key3}: ${9:val3}}"
		],
		"description": "map declaration w/ initial values"
	},
	"slice declaration": {
		"prefix": "slice",
		"body": [
			"var ${1:slicename} []${2:type}"
		],
		"description": "slice declaration"
	},
	"slice declaration w/ initial values": {
		"prefix": "slice init",
		"body": [
			"${1:slicename} := []${2:type}{${3:val1}, ${4:val2}, ${5:val3}}"
		],
		"description": "slice declaration w/ initial values"
	},
	"make slice": {
		"prefix": "slicemake",
		"body": [
			"${1:slicename} := make([]${2:type}, ${3:size})"
		],
		"description": "make slice"
	},
	"structure declaration": {
		"prefix": "struct",
		"body": [
			"type ${1:structname} struct {",
			"  ${2:var1} ${3:type1}",
			"  ${4:var2} ${5:type2}",
			"}"
		],
		"description": "structure declaration"
	}
}