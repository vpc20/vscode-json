{
	// Place your snippets for COBOL here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"define eof sw": {
		"prefix": "define eof sw",
		"body": [
			"05 ${1:FILENAME}-EOF-SW         PIC 9.",
  			"   88 NOT-EOF-${1:FILENAME}     VALUE 0.",
			"   88 EOF-${1:FILENAME}         VALUE 1.",
		],
		"description": "define eof sw"
	},

	"define found sw": {
		"prefix": "define found sw",
		"body": [
			"05 ${1:FILENAME}-FOUND-SW         PIC 9.",
  			"   88 ${1:FILENAME}-NOT-FOUND     VALUE 0.",
			"   88 ${1:FILENAME}-FOUND         VALUE 1.",
		],
		"description": "define found sw"
	},

	"start file": {
		"prefix": "start file",
		"body": [
			"SET NOT-EOF-${1:FILENAME} TO TRUE.",
			"START ${1:FILENAME}",
            "   KEY >= EXTERNALLY-DESCRIBED-KEY",
            "   INVALID KEY",
            "      SET EOF-${1:FILENAME} TO TRUE",
            "END-START.",
		],
		"description": "start file"
	},

	"read file sequential": {
		"prefix": "read file sequential",
		"body": [
			"SET NOT-EOF-${1:FILENAME} TO TRUE.",
			"READ ${1:FILENAME} NEXT RECORD",
			"   AT END",
			"      SET EOF-${1:FILENAME} TO TRUE",
		    "END-READ.",
		],
		"description": "read file sequential"
	},

	"read file indexed": {
		"prefix": "read file indexed",
		"body": [
			"SET ${1:FILENAME}-FOUND TO TRUE.",
			"READ ${1:FILENAME}",
			"   INVALID KEY",
			"      SET ${1:FILENAME}-NOT-FOUND TO TRUE",
		    "END-READ.",
		],
		"description": "read file indexed"
	},

}