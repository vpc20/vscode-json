{
	// Place your snippets for COBOL here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"define eof sw": {
		"prefix": "define eof sw",
		"body": [
			"05 ${1:FILENAME}-EOF-SW         PIC 9.",
  			"   88 NOT-EOF-${1:FILENAME}     VALUE 0.",
			"   88 EOF-${1:FILENAME}         VALUE 1.",
            "$0",
		],
		"description": "define eof sw"
	},

	"define found sw": {
		"prefix": "define found sw",
		"body": [
			"05 ${1:FILENAME}-FOUND-SW         PIC 9.",
  			"   88 ${1:FILENAME}-NOT-FOUND     VALUE 0.",
			"   88 ${1:FILENAME}-FOUND         VALUE 1.",
            "$0",

		],
		"description": "define found sw"
	},

	"start file": {
		"prefix": "start file",
		"body": [
			"SET NOT-EOF-${1:FILENAME} TO TRUE.",
			"START ${1:FILENAME}",
            "   KEY >= EXTERNALLY-DESCRIBED-KEY",
            "   INVALID KEY",
            "      SET EOF-${1:FILENAME} TO TRUE",
            "END-START.",
            "$0",
		],
		"description": "start file"
	},

	"read file sequential": {
		"prefix": "read file sequential",
		"body": [
			"SET NOT-EOF-${1:FILENAME} TO TRUE.",
			"READ ${1:FILENAME} NEXT RECORD",
			"   AT END",
			"      SET EOF-${1:FILENAME} TO TRUE",
		    "END-READ.",
            "$0",
		],
		"description": "read file sequential"
	},

	"read file sequential prior": {
		"prefix": "read file sequential prior",
		"body": [
			"SET NOT-EOF-${1:FILENAME} TO TRUE.",
			"READ ${1:FILENAME} PRIOR RECORD",
			"   AT END",
			"      SET EOF-${1:FILENAME} TO TRUE",
		    "END-READ.",
            "$0",
		],
		"description": "read file sequential prior"
	},

	"read file indexed": {
		"prefix": "read file indexed",
		"body": [
			"SET ${1:FILENAME}-FOUND TO TRUE.",
			"READ ${1:FILENAME}",
			"   INVALID KEY",
			"      SET ${1:FILENAME}-NOT-FOUND TO TRUE",
		    "END-READ.",
            "$0",
		],
		"description": "read file indexed"
	},

	"read display file": {
		"prefix": "read display file",
		"body": [
			"READ ${1:FILENAME} INTO ${2:DSPREC-FORMAT}-I",
			"   FORMAT '${2:DSPREC-FORMAT}' INDICATORS ${3:INDIC-DS}.",
            "$0",
		],
		"description": "read display file"
	},

	"read subfile": {
		"prefix": "read subfile",
		"body": [
            "SET ${2:SFLREC-FORMAT}-FOUND TO TRUE",
			"READ SUBFILE ${1:FILENAME} INTO ${2:SFLREC-FORMAT}-I",
			"   FORMAT '${2:SFLREC-FORMAT}' INDICATORS ${3:INDIC-DS}",
			"   INVALID KEY",
            "      SET ${2:SFLREC-FORMAT}-NOT-FOUND TO TRUE",
            "END-READ.",
            "$0",
		],
		"description": "read subfile"
	},

	"write record": {
		"prefix": "write record",
		"body": [
			"WRITE ${1:RECNAME}.",
            "$0",
		],
		"description": "write record"
	},

	"write display file": {
		"prefix": "write display file",
		"body": [
			"WRITE ${1:DSPREC-NAME} FROM ${2:DSPREC-FORMAT}-I",
			"   FORMAT '${2:DSPREC-FORMAT}' INDICATORS ${3:INDIC-DS}.",
            "$0",
		],
		"description": "write display file"
	},

	"write subfile": {
		"prefix": "write subfile",
		"body": [
			"WRITE SUBFILE ${1:SFLREC-NAME} FROM ${2:SFLREC-FORMAT}-O",
			"   FORMAT '${2:SFLREC-FORMAT}' INDICATORS ${3:INDIC-DS}.",
            "$0",
		],
		"description": "write subfile"
	},

	"rewrite record": {
		"prefix": "rewrite record",
		"body": [
			"REWRITE ${1:RECNAME}.",
            "$0",
		],
		"description": "rewrite record"
	},

	"rewrite subfile": {
		"prefix": "rewrite subfile",
		"body": [
			"REWRITE SUBFILE ${1:SFLREC-NAME} FROM ${2:SFLREC-FORMAT}-O",
			"   FORMAT '${2:SFLREC-FORMAT}' INDICATORS ${3:INDIC-DS}.",
            "$0",
		],
		"description": "rewrite subfile"
	},

	"delete record": {
		"prefix": "delete record",
		"body": [
			"DELETE ${1:FILENAME}.",
            "$0",
		],
		"description": "delete record"
	},

	"pic sql smallint": {
		"prefix": "pic sql smallint",
		"body": [
			"PIC S9(4) COMP-4.",
		],
		"description": "pic sql smallint"
	},

	"pic sql integer": {
		"prefix": "pic sql integer",
		"body": [
			"PIC S9(9) COMP-4.",
		],
		"description": "pic sql integer"
	},

	"pic sql bigint": {
		"prefix": "pic sql bigint",
		"body": [
			"PIC S9(18) COMP-4.",
		],
		"description": "pic sql bigint"
	},

	"pic sql decimal": {
		"prefix": "pic sql decimal",
		"body": [
			"PIC S9(${1:p-s})V9(${2:s}) COMP-3.",
		],
		"description": "pic sql decimal"
	},

	"pic sql numeric": {
		"prefix": "pic sql numeric",
		"body": [
			"PIC S9(${1:p-s})V9(${2:s}).",
		],
		"description": "pic sql numeric"
	},

	"pic sql float single precision": {
		"prefix": "pic sql float single precision",
		"body": [
			"USAGE COMP-1.",
		],
		"description": "pic sql float single precision"
	},

	"pic sql float double precision": {
		"prefix": "pic sql float double precision",
		"body": [
			"USAGE COMP-2.",
		],
		"description": "pic sql float double precision"
	},

	"pic sql char": {
		"prefix": "pic sql char",
		"body": [
			"PIC X(${1:n}).",
		],
		"description": "pic sql char"
	},

	"pic sql clob": {
		"prefix": "pic sql clob",
		"body": [
			"SQL TYPE IS CLOB(${1:len}).",
		],
		"description": "pic sql clob"
	},

	"pic sql clob locator": {
		"prefix": "pic sql clob locator",
		"body": [
			"SQL TYPE IS CLOB-LOCATOR.",
		],
		"description": "pic sql clob locator"
	},

	"pic sql clob file": {
		"prefix": "pic sql clob file",
		"body": [
			"SQL TYPE IS CLOB-FILE.",
		],
		"description": "pic sql clob file"
	},

	"pic sql dbclob": {
		"prefix": "pic sql dbclob",
		"body": [
			"SQL TYPE IS DBCLOB(${1:len}).",
		],
		"description": "pic sql dbclob"
	},

	"pic sql dbclob locator": {
		"prefix": "pic sql dbclob locator",
		"body": [
			"SQL TYPE IS DBCLOB-LOCATOR.",
		],
		"description": "pic sql dbclob locator"
	},

	"pic sql dbclob file": {
		"prefix": "pic sql dbclob file",
		"body": [
			"SQL TYPE IS DBCLOB-FILE.",
		],
		"description": "pic sql dbclob file"
	},

	"pic sql blob": {
		"prefix": "pic sql blob",
		"body": [
			"SQL TYPE IS BLOB(${1:len}).",
		],
		"description": "pic sql blob"
	},

	"pic sql blob locator": {
		"prefix": "pic sql blob locator",
		"body": [
			"SQL TYPE IS BLOB-LOCATOR.",
		],
		"description": "pic sql blob locator"
	},

	"pic sql blob file": {
		"prefix": "pic sql blob file",
		"body": [
			"SQL TYPE IS BLOB-FILE.",
		],
		"description": "pic sql blob file"
	},

	"pic sql xml clob": {
		"prefix": "pic sql xml clob",
		"body": [
			"SQL TYPE IS XML AS CLOB(${1:len}).",
		],
		"description": "pic sql xml clob"
	},

	"pic sql xml dbclob": {
		"prefix": "pic sql xml dbclob",
		"body": [
			"SQL TYPE IS XML AS DBCLOB(${1:len}).",
		],
		"description": "pic sql xml dbclob"
	},

	"pic sql xml blob": {
		"prefix": "pic sql xml blob",
		"body": [
			"SQL TYPE IS XML AS BLOB(${1:len}).",
		],
		"description": "pic sql xml blob"
	},

	"pic sql xml clob file": {
		"prefix": "pic sql xml clob file",
		"body": [
			"SQL TYPE IS XML AS CLOB-FILE.",
		],
		"description": "pic sql xml clob file"
	},

	"pic sql xml dbclob file": {
		"prefix": "pic sql xml dbclob file",
		"body": [
			"SQL TYPE IS XML AS DBCLOB-FILE.",
		],
		"description": "pic sql xml dbclob file"
	},

	"pic sql xml blob file": {
		"prefix": "pic sql xml blob file",
		"body": [
			"SQL TYPE IS XML AS BLOB-FILE.",
		],
		"description": "pic sql xml blob file"
	},

	"pic sql xml locator": {
		"prefix": "pic sql xml locator",
		"body": [
			"SQL TYPE IS XML-LOCATOR.",
		],
		"description": "pic sql xml locator"
	},

	"pic sql binary": {
		"prefix": "pic sql binary",
		"body": [
			"SQL TYPE IS BINARY(${1:len}).",
		],
		"description": "pic sql binary"
	},

	"pic sql varbinary": {
		"prefix": "pic sql varbinary",
		"body": [
			"SQL TYPE IS VARBINARY(${1:len}).",
		],
		"description": "pic sql varbinary"
	},

	"pic sql date": {
		"prefix": "pic sql date",
		"body": [
			"FORMAT DATE.",
		],
		"description": "pic sql date"
	},

	"pic sql time": {
		"prefix": "pic sql time",
		"body": [
			"FORMAT TIME.",
		],
		"description": "pic sql time"
	},

	"pic sql timestamp": {
		"prefix": "pic sql timestamp",
		"body": [
			"FORMAT TIMESTAMP.",
		],
		"description": "pic sql timestamp"
	},

	"pic sql rowid": {
		"prefix": "pic sql rowid",
		"body": [
			"SQL TYPE IS ROWID.",
		],
		"description": "pic sql rowid"
	},

	"pic sql result set locator": {
		"prefix": "pic sql result set locator",
		"body": [
			"SQL TYPE IS  RESULT-SET-LOCATOR.",
		],
		"description": "pic sql result set locator"
	},

}